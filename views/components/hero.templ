package components

import (
	"fmt"
	"strings"

	"guitarrich/xmcloud/model"
	"guitarrich/xmcloud/sitecore/render/components"
	"guitarrich/xmcloud/views/atoms"
	"guitarrich/xmcloud/sitecore/render/fields"
)

func buildStyle(props model.PlaceholderComponent) string {
	imageUrl := fields.GetImageField(props.Fields, "HeroImage").Value.Src
	if strings.Contains(imageUrl, "/-/media/") {
		trimTo := strings.Index(imageUrl, "/-/media/")
		imageUrl = imageUrl[trimTo : len(imageUrl)-1]
	}
	return fmt.Sprintf("--image-url:url('%s');", imageUrl)
}

const backgroundStyle = "component hero bg-white bg-[image:var(--image-url)] bg-cover bg-center"

templ Hero(component model.PlaceholderComponent, sc model.SitecoreContext) {
	@templ.Raw(
		fmt.Sprintf("<div style=\"%s\" class=\"%s\">", buildStyle(component),
			components.DecorateComponent(backgroundStyle, component)),
	)
	<div class="relative overflow-hidden py-24 lg:py-32">
		<div aria-hidden="true" class="flex absolute -top-96 start-1/2 transform -translate-x-1/2">
			<div
				class="bg-gradient-to-r opacity-50 blur-3xl w-[90rem] h-[70rem] rounded-full origin-top-left -rotate-12 -translate-x-[15rem] from-transparent via-scblack to-transparent"
			></div>
		</div>
		<div class="relative z-10">
			<div class="container max-w-full w-full py-10 lg:py-16">
				<div class="max-w-2xl text-center mx-auto text-scwhite">
					<div class="">
						@fields.RichTextField(component.Fields, "HeroTagLine")
					</div>
					<div class="mt-5 max-w-2xl">
						<h1 class="scroll-m-20 text-5xl font-normal tracking-wider lg:text-5xl">
							@fields.RichTextField(component.Fields, "HeroTitle")
						</h1>
					</div>
					<div class="mt-5 max-w-3xl">
						<div class="text-xl text-scgray-90">
							@fields.RichTextField(component.Fields, "HeroText")
						</div>
					</div>
					<div class="mt-8 gap-3 flex justify-center">
						@atoms.Button(atoms.ButtonProps{
							Size: atoms.ButtonSizeLarge,
						}, component.Fields, "HeroLink")
					</div>
				</div>
			</div>
		</div>
	</div>
	@templ.Raw(`
	</div>`)
}
